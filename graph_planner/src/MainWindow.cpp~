
#include "MainWindow.h"

// if we include <QtGui> there is no need to include every class used: <QString>, <QFileDialog>,...

MainWindow::MainWindow(QWidget *parent) : nh_(){
  
  // this sets up GUI
  setupUi(this); 
  /*
  // File menu
  QMenu* fileMenu = new QMenu(_menuBar);
  fileMenu->setTitle("File");
  _menuBar->addAction(fileMenu->menuAction());

  //fileMenu->addAction("Open", this, SLOT(open()));
  fileMenu->addSeparator();
  fileMenu->addAction("Exit", this, SLOT(close()), Qt::CTRL + Qt::Key_Q);
*/
  //connect(GoButton, SIGNAL(clicked()), this, SLOT(doSomething()));
/*
    //read from file
    std::string name = "stamina"; 
   std::string path = ros::package::getPath("navigation_rail"); 
    std::ifstream file_stream_vertex(path +"/"+ name + "_vertex.txt");
    // check if file exsist
    if (file_stream_vertex.is_open()) { 
         std::string line;
         while (std::getline(file_stream_vertex, line)) {
            std::istringstream file_stream_vertex(line);         
             std::string name;
            file_stream_vertex>>name;
             WaypointBox->addItem(QString::fromUtf8(name.c_str()));
         }
    }
    file_stream_vertex.close();
    cmd_pub_ = nh_.advertise < std_msgs::Int32> ("goto_cmd", 0);
*/
}


MainWindow::~MainWindow(){  
}

void MainWindow::doSomething() {
/*
    std::cerr << "Go to Waypoint: " << WaypointBox->currentIndex()+1<< std::endl;
    std_msgs::Int32 msg;
    msg.data = WaypointBox->currentIndex();
    cmd_pub_.publish(msg);
*/
}




int main(int argc, char** argv) {
  ros::init(argc, argv, "qttest", ros::init_options::AnonymousName);

  QApplication qapp(argc, argv);
  ros::NodeHandle nh_local("~");

  MainWindow main_window;

  main_window.show();
  
  while(ros::ok() && main_window.isVisible()) {
    ros::spinOnce();
    qapp.processEvents();
  }
  return 0;
}
